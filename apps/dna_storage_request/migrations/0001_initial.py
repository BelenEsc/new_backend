# Generated by Django 5.2.1 on 2025-05-26 10:06

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DnaAliquot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dna_aliquot_qr_code', models.CharField(max_length=15, unique=True)),
                ('is_in_database', models.IntegerField(blank=True, null=True)),
                ('dna_aliquot_storage_location', models.CharField(blank=True, max_length=45, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'DNA_aliquot',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_sample_id', models.CharField(max_length=100)),
                ('taxon_group', models.CharField(max_length=12)),
                ('family', models.CharField(max_length=50)),
                ('genus', models.CharField(max_length=45)),
                ('scientific_name', models.CharField(max_length=100)),
                ('interspecific_epithet', models.CharField(max_length=50)),
                ('collector_sample_id', models.CharField(max_length=100)),
                ('collected_by', models.CharField(max_length=50)),
                ('collector_affiliation', models.CharField(max_length=50)),
                ('date_of_collection', models.DateField()),
                ('collection_location', models.CharField(max_length=100)),
                ('decimal_latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('decimal_longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('habitat', models.TextField()),
                ('elevation', models.IntegerField()),
                ('identified_by', models.CharField(max_length=50)),
                ('voucher_id', models.CharField(max_length=50)),
                ('voucher_link', models.TextField(blank=True, null=True)),
                ('voucher_institution', models.CharField(max_length=100)),
                ('sampling_permits_required', models.IntegerField(blank=True, null=True)),
                ('sampling_permits_filename', models.CharField(blank=True, max_length=100, null=True)),
                ('nagoya_permits_required', models.IntegerField(blank=True, null=True)),
                ('nagoya_permits_filename', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(blank=True, db_comment='\t', null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Metadata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_date', models.DateField()),
                ('tissue_sample_quantity', models.IntegerField(blank=True, null=True)),
                ('aliquot_sample_quantity', models.IntegerField(blank=True, null=True)),
                ('has_manifest_file', models.IntegerField(blank=True, null=True)),
                ('manifest_storage_path', models.CharField(blank=True, max_length=400, null=True)),
                ('b_mta_sent_date', models.DateField(blank=True, null=True)),
                ('mta_signed_date', models.DateField(blank=True, null=True)),
                ('mta_storage_path', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Request',
                'db_table_comment': '\t',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Requester',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('contact_person_email', models.CharField(max_length=100)),
                ('requester_institution', models.CharField(max_length=100)),
                ('institution_location', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Requester',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipment_date', models.DateField(blank=True, null=True)),
                ('accession_date', models.DateField(blank=True, null=True)),
                ('is_collection_b_labeled', models.IntegerField(blank=True, null=True)),
                ('tracking_number', models.CharField(blank=True, max_length=45, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Shipment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tissue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tissue_barcode', models.CharField(max_length=15, unique=True)),
                ('is_in_jacq', models.IntegerField()),
                ('tissue_sample_storage_location', models.CharField(max_length=45)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('update_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Tissue',
                'managed': False,
            },
        ),
    ]
